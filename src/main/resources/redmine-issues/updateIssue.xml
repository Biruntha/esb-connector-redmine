<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<template name="updateIssue" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="id" description="The issue id."/>
    <parameter name="projectId" description="The projectId is project identifier."/>
    <parameter name="trackerId" description="The trackerId get issues from the tracker."/>
    <parameter name="statusId" description="The statusId get issues with the given status."/>
    <parameter name="priorityId" description="The priorityId provide issue priority."/>
    <parameter name="subject" description="The subject of the issue."/>
    <parameter name="description" description="The description of the issue."/>
    <parameter name="categoryId" description="The categoryId of the issue."/>
    <parameter name="fixedVersionId" description="The fixedVersionId  of the issue."/>
    <parameter name="assignedToId" description="The assignedToId display assigned details."/>
    <parameter name="parentIssueId" description="The parentIssueId display parent issue id."/>
    <parameter name="customFields" description="The customFields add customer fields."/>
    <parameter name="watcherUserIds" description="Array of user ids."/>
    <parameter name="uploads" description="The upload attachment."/>
    <parameter name="notes" description="The notes for updated reason."/>
    <sequence>
        <property name="uri.var.id" expression="$func:id"/>
        <property name="uri.var.projectId" expression="$func:projectId"/>
        <property name="uri.var.trackerId" expression="$func:trackerId"/>
        <property name="uri.var.statusId" expression="$func:statusId"/>
        <property name="uri.var.priorityId" expression="$func:priorityId"/>
        <property name="uri.var.subject" expression="$func:subject"/>
        <property name="uri.var.description" expression="$func:description"/>
        <property name="uri.var.categoryId" expression="$func:categoryId"/>
        <property name="uri.var.fixedVersionId" expression="$func:fixedVersionId"/>
        <property name="uri.var.assignedToId" expression="$func:assignedToId"/>
        <property name="uri.var.parentIssueId" expression="$func:parentIssueId"/>
        <property name="uri.var.customFields" expression="$func:customFields"/>
        <property name="uri.var.watcherUserIds" expression="$func:watcherUserIds"/>
        <property name="uri.var.uploads" expression="$func:uploads"/>
        <property name="uri.var.notes" expression="$func:notes"/>
        <payloadFactory media-type="json">
            <format>
                {
                "issue":{
                "project_id": "$1",
                "status_id": "$2",
                "subject": "$3",
                "description": "$4",
                "category_id": "$5",
                "fixed_version_id": "$6",
                "assigned_to_id": "$7",
                "parent_issue_id":"$8",
                "notes": "$9"
                }
                }
            </format>
            <args>
                <arg expression="get-property('uri.var.projectId')"/>
                <arg expression="get-property('uri.var.statusId')"/>
                <arg expression="get-property('uri.var.subject')"/>
                <arg expression="get-property('uri.var.description')"/>
                <arg expression="get-property('uri.var.categoryId')"/>
                <arg expression="get-property('uri.var.fixedVersionId')"/>
                <arg expression="get-property('uri.var.assignedToId')"/>
                <arg expression="get-property('uri.var.parentIssueId')"/>
                <arg expression="get-property('uri.var.notes')"/>
            </args>
        </payloadFactory>
        <script language="js">
            <![CDATA[
			var tracker_id = mc.getProperty("uri.var.trackerId");
			var priority_id = mc.getProperty("uri.var.priorityId");
			var custom_fields = mc.getProperty("uri.var.customFields");
			var uploads = mc.getProperty("uri.var.uploads");
			var watcher_user_ids = mc.getProperty('uri.var.watcherUserIds');
			payload = mc.getPayloadJSON();
			
			if (tracker_id != null && tracker_id != "") {
				payload.issue.tracker_id = eval("("+tracker_id+")");
			}
			
			if (priority_id != null && priority_id != "") {
				payload.issue.priority_id = eval("("+priority_id+")");
			}
			
			if (custom_fields != null && custom_fields != "") {
				payload.issue.custom_fields = eval("("+custom_fields+")");
			}
			
			if (uploads != null && uploads != "") {
				payload.issue.uploads = eval("("+uploads+")");
			}
			
			if (watcher_user_ids != null && watcher_user_ids != "") {
				payload.issue.watcher_user_ids = eval("("+watcher_user_ids+")");
			}
			mc.setPayloadJSON(payload);
		]]>
        </script>
        <header name="Content-Type" value="application/json" scope="transport"/>
        <property name="messageType" value="application/json" scope="axis2"/>
        <call>
            <endpoint>
                <http method="put" uri-template="{+uri.var.apiUrl}/issues/{+uri.var.id}.{+uri.var.responseType}"/>
            </endpoint>
        </call>
        <!-- Remove response custom header information -->
        <header name="X-Runtime" scope="transport" action="remove"/>
        <header name="Location" scope="transport" action="remove"/>
        <header name="ETag" scope="transport" action="remove"/>
        <header name="X-UA-Compatible" scope="transport" action="remove"/>
        <header name="Via" scope="transport" action="remove"/>
        <header name="X-Request-Id" scope="transport" action="remove"/>
        <header name="X-Rack-Cache" scope="transport" action="remove"/>
        <header name="Set-Cookie" scope="transport" action="remove"/>
    </sequence>
</template>